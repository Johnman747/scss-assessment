[{"/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/index.js":"1","/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/App.js":"2","/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/MultiSelect/MultiSelect.js":"3","/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/SingleSelect/SingleSelect.js":"4"},{"size":197,"mtime":1611892780223,"results":"5","hashOfConfig":"6"},{"size":1341,"mtime":1611941865683,"results":"7","hashOfConfig":"6"},{"size":3294,"mtime":1611953710040,"results":"8","hashOfConfig":"6"},{"size":2056,"mtime":1611905492515,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1n66rw1",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/index.js",[],["20","21"],"/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/App.js",[],"/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/MultiSelect/MultiSelect.js",["22","23","24","25","26","27","28"],"/Users/johnathanmoes/Documents/Code Test/scss-assessment/src/SingleSelect/SingleSelect.js",["29"],"import React, { useState, useEffect } from 'react'\nimport './SingleSelect.scss'\n\nconst SingleSelect = props => {\n\n    /*\n\n        This component is built for you. Just skin it with the scss file. See the example.png. \n\n        Suggestions:\n            rollover states on buttons.\n            staging animations.\n            make feedback a modal window.\n\n    */\n\n    const [selected, setSelected] = useState(-1);\n\n    const handleSelect = (i) => {\n        if (selected === -1) setSelected(i)\n    }\n\n    const selectedOption = props.data.options[selected]\n\n    return (\n        <div className={`SingleSelect`}>\n            <h1>\n                {props.data.questionText}\n            </h1>\n            {\n                // selected === -1 &&\n                props.data.options.map((option, optionIndex) => {\n                    let letter = ['A.', 'B.', 'C.', 'D.']\n                    return <button className=\"answerBtn\" onClick={() => { handleSelect(optionIndex) }}>{`${letter[optionIndex]} ${option.text}`}</button>\n                })\n            }\n            {\n                selected > -1 &&\n                <div className={`feedback ${selectedOption.correct ? 'correct' : 'incorrect'}`}>\n                    <div className={`feedbackContent`}>\n                        <h1>\n                            {selectedOption.correct ?\n                                props.data.feedback.correct.header\n                                :\n                                props.data.feedback.incorrect.header\n                            }\n                        </h1>\n                        <p>\n                            {selectedOption.correct ?\n                                props.data.feedback.correct.body\n                                :\n                                props.data.feedback.incorrect.body\n                            }\n                        </p>\n                        <button onClick={props.onComplete}>OK</button>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default SingleSelect",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":30,"column":52,"nodeType":"40","messageId":"41","endLine":30,"endColumn":54},{"ruleId":"38","severity":1,"message":"39","line":30,"column":111,"nodeType":"40","messageId":"41","endLine":30,"endColumn":113},{"ruleId":"38","severity":1,"message":"39","line":65,"column":68,"nodeType":"40","messageId":"41","endLine":65,"endColumn":70},{"ruleId":"38","severity":1,"message":"39","line":65,"column":111,"nodeType":"40","messageId":"41","endLine":65,"endColumn":113},{"ruleId":"38","severity":1,"message":"39","line":66,"column":52,"nodeType":"40","messageId":"41","endLine":66,"endColumn":54},{"ruleId":"38","severity":1,"message":"39","line":66,"column":95,"nodeType":"40","messageId":"41","endLine":66,"endColumn":97},{"ruleId":"34","severity":1,"message":"35","line":1,"column":27,"nodeType":"36","messageId":"37","endLine":1,"endColumn":36},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]